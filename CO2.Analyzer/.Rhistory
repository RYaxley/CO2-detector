install.packages("manipulate")
install.packages(c("boot", "car", "class", "cluster", "colorspace", "foreign", "KernSmooth", "lattice", "manipulate", "MASS", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(radiant)
install.packages("ggplot2", lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(radiant)
install.packages("radiant")
install.packages("manipulate")
library(radiant)
mac_launcher()
?mac_launcher
mac_launcher("/Users/Rich_Yaxley/Desktop/radiant.command")
mac_launcher(file="/Users/Rich_Yaxley/Desktop/radiant.command")
install.packages("manipulate")
install.packages(c("codetools", "colorspace", "ggplot2", "MASS", "radiant"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages(c("arm", "ggplot2", "glmnet", "igraph", "lme4", "lubridate", "RCurl", "RJSONIO", "tm","XML"))
install.packages(c("arm", "glmnet", "manipulate"))
install.packages(c("boot", "evaluate", "formatR", "gtools", "highr", "lattice", "Matrix", "mgcv", "mime", "mnormt", "radiant"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("manipulate")
install.packages(c("arm", "manipulate"))
install.packages(c("boot", "class", "cluster", "codetools", "foreign", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "nlme", "nnet", "rpart", "spatial", "survival"))
install.packages("manipulate")
library(shiny)
install.packages("shiny")
library(shiny)
ui <- fluidPage()
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
ui <- fluidPage("hello world")
server <- function(input, output) {}
shinyApp(ui = ui, server = server)
rnorm(100)
hist(rnorm(100))
install.packages('rjson')
install.packages('XML')
install.packages('foreign')
# CO2 Concentration dataset
# Check machine and set path appropriately
if(Sys.info()["nodename"] == 'Turing.local'){
setwd('/Users/rhy/Dropbox/Work/Meemir/Respirion/Analysis/Rich Code')
} else if (Sys.info()["nodename"] == 'Richs-MacBook-Air.local'){
setwd('/Users/Rich_Yaxley/Dropbox (Personal)/Work/Meemir/Respirion/Analysis/Rich Code')
}
data <- NULL
datapath <- file.path('../../Data')
files <- list.files(datapath, pattern='*.TXT')
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F) # nrows=1000
# Name columns
names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
print(file)
print(table(complete.cases(df)))
print(class(df$green))
#For run 0 the green channel reads in as 'character' type.  Converting to
#numeric sends the few "Light Blocked" values to NAs. --Jim
# This step no longer appears necessary. But, I'm leaving it in just in case. --Rich
df$green <- as.numeric(df$green)
df$blue <- as.numeric(df$blue)
df$red <- as.numeric(df$red)
df$clear <- as.numeric(df$clear)
# Replacing the bizarrely large and small values with NAs
df$green[df$green > 1000000 | df$green < 100] <- NA
df$blue[df$blue   > 1000000 | df$blue  < 100] <- NA
df$red[df$red     > 1000000 | df$red   < 100] <- NA
df$clear[df$clear > 1000000 | df$clear < 100] <- NA
# Extract experiment #, respiration rate, CO2 concentration from filename
df$run  <- substr(file,2,3)
df$resp <- substr(file,6,7)
df$conc <- substr(file,9,10)
df$time <- 1:nrow(df) # timepoint
df$runtime <- round(df$time * 1/60, 3) # clock time
# Reorder columns & factors
df <- df[c('run','conc','resp','time','runtime','p2v','est.Conc', 'est.Resp',
'green','blue','red','clear')]
df$run  <- factor(df$run,c('00','01','02','03','04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18','19','20',
'21','22','23','24','25','26','27','28','29','30',
'31','32','33','34','35','36','37','38','39','40',
'90','91','92','93','94','95'))
df$resp <- factor(df$resp,c('00','06','12','15','18','24','30'))
df$conc <- factor(df$conc,c('00','10','15','25','35','45','55','65'))
data <- rbind(data, df)
}
head(df)
tail(df)
files
data <- NULL
datapath <- file.path('../../Data')
files <- list.files(datapath, pattern='*.TXT')
files
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F) # nrows=1000
# Name columns
names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
print(file)
print(table(complete.cases(df)))
print(class(df$green))
#For run 0 the green channel reads in as 'character' type.  Converting to
#numeric sends the few "Light Blocked" values to NAs. --Jim
# This step no longer appears necessary. But, I'm leaving it in just in case. --Rich
df$green <- as.numeric(df$green)
df$blue <- as.numeric(df$blue)
df$red <- as.numeric(df$red)
df$clear <- as.numeric(df$clear)
# Replacing the bizarrely large and small values with NAs
df$green[df$green > 1000000 | df$green < 100] <- NA
df$blue[df$blue   > 1000000 | df$blue  < 100] <- NA
df$red[df$red     > 1000000 | df$red   < 100] <- NA
df$clear[df$clear > 1000000 | df$clear < 100] <- NA
# Extract experiment #, respiration rate, CO2 concentration from filename
df$run  <- substr(file,2,3)
df$resp <- substr(file,6,7)
df$conc <- substr(file,9,10)
df$time <- 1:nrow(df) # timepoint
df$runtime <- round(df$time * 1/60, 3) # clock time
# Reorder columns & factors
df <- df[c('run','conc','resp','time','runtime','p2v','est.Conc', 'est.Resp',
'green','blue','red','clear')]
df$run  <- factor(df$run,c('00','01','02','03','04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18','19','20',
'21','22','23','24','25','26','27','28','29','30',
'31','32','33','34','35','36','37','38','39','40',
'90','91','92','93','94','95'))
df$resp <- factor(df$resp,c('00','06','12','15','18','24','30'))
df$conc <- factor(df$conc,c('00','10','15','25','35','45','55','65'))
data <- rbind(data, df)
}
head(df)
unique(df$run)
unique(df$conc)
head(df)
head(df,100)
head(df,1000)
# Check machine and set path appropriately
if(Sys.info()["nodename"] == 'Turing.local'){
setwd('/Users/rhy/Dropbox/Work/Meemir/Respirion/Analysis/Rich Code')
} else if (Sys.info()["nodename"] == 'Richs-MacBook-Air.local'){
setwd('/Users/Rich_Yaxley/Dropbox (Personal)/Work/Meemir/Respirion/Analysis/Rich Code')
}
data <- NULL
datapath <- file.path('../../Data')
files <- list.files(datapath, pattern='*.TXT')
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F) # nrows=1000
# Name columns
#   names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
#
#   print(file)
#   print(table(complete.cases(df)))
#   print(class(df$green))
#
#   #For run 0 the green channel reads in as 'character' type.  Converting to
#   #numeric sends the few "Light Blocked" values to NAs. --Jim
#   # This step no longer appears necessary. But, I'm leaving it in just in case. --Rich
#   df$green <- as.numeric(df$green)
#   df$blue <- as.numeric(df$blue)
#   df$red <- as.numeric(df$red)
#   df$clear <- as.numeric(df$clear)
#
#   # Replacing the bizarrely large and small values with NAs
#   df$green[df$green > 1000000 | df$green < 100] <- NA
#   df$blue[df$blue   > 1000000 | df$blue  < 100] <- NA
#   df$red[df$red     > 1000000 | df$red   < 100] <- NA
#   df$clear[df$clear > 1000000 | df$clear < 100] <- NA
#
#   # Extract experiment #, respiration rate, CO2 concentration from filename
#   df$run  <- substr(file,2,3)
#   df$resp <- substr(file,6,7)
#   df$conc <- substr(file,9,10)
#   df$time <- 1:nrow(df) # timepoint
#   df$runtime <- round(df$time * 1/60, 3) # clock time
#
#   # Reorder columns & factors
#   df <- df[c('run','conc','resp','time','runtime','p2v','est.Conc', 'est.Resp',
#              'green','blue','red','clear')]
#   df$run  <- factor(df$run,c('00','01','02','03','04','05','06','07','08','09','10',
#                              '11','12','13','14','15','16','17','18','19','20',
#                              '21','22','23','24','25','26','27','28','29','30',
#                              '31','32','33','34','35','36','37','38','39','40',
#                              '90','91','92','93','94','95'))
#   df$resp <- factor(df$resp,c('00','06','12','15','18','24','30'))
#   df$conc <- factor(df$conc,c('00','10','15','25','35','45','55','65'))
#   data <- rbind(data, df)
}
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F) # nrows=1000
Name columns
names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
print(file)
print(table(complete.cases(df)))
print(class(df$green))
#
#   #For run 0 the green channel reads in as 'character' type.  Converting to
#   #numeric sends the few "Light Blocked" values to NAs. --Jim
#   # This step no longer appears necessary. But, I'm leaving it in just in case. --Rich
#   df$green <- as.numeric(df$green)
#   df$blue <- as.numeric(df$blue)
#   df$red <- as.numeric(df$red)
#   df$clear <- as.numeric(df$clear)
#
#   # Replacing the bizarrely large and small values with NAs
#   df$green[df$green > 1000000 | df$green < 100] <- NA
#   df$blue[df$blue   > 1000000 | df$blue  < 100] <- NA
#   df$red[df$red     > 1000000 | df$red   < 100] <- NA
#   df$clear[df$clear > 1000000 | df$clear < 100] <- NA
#
#   # Extract experiment #, respiration rate, CO2 concentration from filename
#   df$run  <- substr(file,2,3)
#   df$resp <- substr(file,6,7)
#   df$conc <- substr(file,9,10)
#   df$time <- 1:nrow(df) # timepoint
#   df$runtime <- round(df$time * 1/60, 3) # clock time
#
#   # Reorder columns & factors
#   df <- df[c('run','conc','resp','time','runtime','p2v','est.Conc', 'est.Resp',
#              'green','blue','red','clear')]
#   df$run  <- factor(df$run,c('00','01','02','03','04','05','06','07','08','09','10',
#                              '11','12','13','14','15','16','17','18','19','20',
#                              '21','22','23','24','25','26','27','28','29','30',
#                              '31','32','33','34','35','36','37','38','39','40',
#                              '90','91','92','93','94','95'))
#   df$resp <- factor(df$resp,c('00','06','12','15','18','24','30'))
#   df$conc <- factor(df$conc,c('00','10','15','25','35','45','55','65'))
#   data <- rbind(data, df)
}
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F) # nrows=1000
Name columns
names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
print(file)
print(table(complete.cases(df)))
print(class(df$green))
#
#   #For run 0 the green channel reads in as 'character' type.  Converting to
#   #numeric sends the few "Light Blocked" values to NAs. --Jim
#   # This step no longer appears necessary. But, I'm leaving it in just in case. --Rich
#   df$green <- as.numeric(df$green)
#   df$blue <- as.numeric(df$blue)
#   df$red <- as.numeric(df$red)
#   df$clear <- as.numeric(df$clear)
#
#   # Replacing the bizarrely large and small values with NAs
#   df$green[df$green > 1000000 | df$green < 100] <- NA
#   df$blue[df$blue   > 1000000 | df$blue  < 100] <- NA
#   df$red[df$red     > 1000000 | df$red   < 100] <- NA
#   df$clear[df$clear > 1000000 | df$clear < 100] <- NA
#
#   # Extract experiment #, respiration rate, CO2 concentration from filename
#   df$run  <- substr(file,2,3)
#   df$resp <- substr(file,6,7)
#   df$conc <- substr(file,9,10)
#   df$time <- 1:nrow(df) # timepoint
#   df$runtime <- round(df$time * 1/60, 3) # clock time
#
#   # Reorder columns & factors
#   df <- df[c('run','conc','resp','time','runtime','p2v','est.Conc', 'est.Resp',
#              'green','blue','red','clear')]
#   df$run  <- factor(df$run,c('00','01','02','03','04','05','06','07','08','09','10',
#                              '11','12','13','14','15','16','17','18','19','20',
#                              '21','22','23','24','25','26','27','28','29','30',
#                              '31','32','33','34','35','36','37','38','39','40',
#                              '90','91','92','93','94','95'))
#   df$resp <- factor(df$resp,c('00','06','12','15','18','24','30'))
#   df$conc <- factor(df$conc,c('00','10','15','25','35','45','55','65'))
#   data <- rbind(data, df)
}
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F) # nrows=1000
Name columns
names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
print(file)
print(table(complete.cases(df)))
print(class(df$green))
}
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F) # nrows=1000
#   # Name columns
#   names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
#
#   print(file)
#   print(table(complete.cases(df)))
#   print(class(df$green))
#
#   #For run 0 the green channel reads in as 'character' type.  Converting to
#   #numeric sends the few "Light Blocked" values to NAs. --Jim
#   # This step no longer appears necessary. But, I'm leaving it in just in case. --Rich
#   df$green <- as.numeric(df$green)
#   df$blue <- as.numeric(df$blue)
#   df$red <- as.numeric(df$red)
#   df$clear <- as.numeric(df$clear)
#
#   # Replacing the bizarrely large and small values with NAs
#   df$green[df$green > 1000000 | df$green < 100] <- NA
#   df$blue[df$blue   > 1000000 | df$blue  < 100] <- NA
#   df$red[df$red     > 1000000 | df$red   < 100] <- NA
#   df$clear[df$clear > 1000000 | df$clear < 100] <- NA
#
#   # Extract experiment #, respiration rate, CO2 concentration from filename
#   df$run  <- substr(file,2,3)
#   df$resp <- substr(file,6,7)
#   df$conc <- substr(file,9,10)
#   df$time <- 1:nrow(df) # timepoint
#   df$runtime <- round(df$time * 1/60, 3) # clock time
#
#   # Reorder columns & factors
#   df <- df[c('run','conc','resp','time','runtime','p2v','est.Conc', 'est.Resp',
#              'green','blue','red','clear')]
#   df$run  <- factor(df$run,c('00','01','02','03','04','05','06','07','08','09','10',
#                              '11','12','13','14','15','16','17','18','19','20',
#                              '21','22','23','24','25','26','27','28','29','30',
#                              '31','32','33','34','35','36','37','38','39','40',
#                              '90','91','92','93','94','95'))
#   df$resp <- factor(df$resp,c('00','06','12','15','18','24','30'))
#   df$conc <- factor(df$conc,c('00','10','15','25','35','45','55','65'))
#   data <- rbind(data, df)
}
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
#   # Name columns
#   names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
#
#   print(file)
#   print(table(complete.cases(df)))
#   print(class(df$green))
#
#   #For run 0 the green channel reads in as 'character' type.  Converting to
#   #numeric sends the few "Light Blocked" values to NAs. --Jim
#   # This step no longer appears necessary. But, I'm leaving it in just in case. --Rich
#   df$green <- as.numeric(df$green)
#   df$blue <- as.numeric(df$blue)
#   df$red <- as.numeric(df$red)
#   df$clear <- as.numeric(df$clear)
#
#   # Replacing the bizarrely large and small values with NAs
#   df$green[df$green > 1000000 | df$green < 100] <- NA
#   df$blue[df$blue   > 1000000 | df$blue  < 100] <- NA
#   df$red[df$red     > 1000000 | df$red   < 100] <- NA
#   df$clear[df$clear > 1000000 | df$clear < 100] <- NA
#
#   # Extract experiment #, respiration rate, CO2 concentration from filename
#   df$run  <- substr(file,2,3)
#   df$resp <- substr(file,6,7)
#   df$conc <- substr(file,9,10)
#   df$time <- 1:nrow(df) # timepoint
#   df$runtime <- round(df$time * 1/60, 3) # clock time
#
#   # Reorder columns & factors
#   df <- df[c('run','conc','resp','time','runtime','p2v','est.Conc', 'est.Resp',
#              'green','blue','red','clear')]
#   df$run  <- factor(df$run,c('00','01','02','03','04','05','06','07','08','09','10',
#                              '11','12','13','14','15','16','17','18','19','20',
#                              '21','22','23','24','25','26','27','28','29','30',
#                              '31','32','33','34','35','36','37','38','39','40',
#                              '90','91','92','93','94','95'))
#   df$resp <- factor(df$resp,c('00','06','12','15','18','24','30'))
#   df$conc <- factor(df$conc,c('00','10','15','25','35','45','55','65'))
#   data <- rbind(data, df)
}
timeit(
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
})
require(timeit)
install.packages("timeit")
require(timeit)
timeit(
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
})
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
}
print(time.taken)
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
print(file)
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
print(file)
head(df)
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
print(file)
print(head(df))
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
dim(df)
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
print(file)
print(head(df))
print(dim(df))
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
# Name columns
names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
print(file)
print(head(df))
print(dim(df))
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
# Name columns
names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
print(file)
print(head(df))
print(dim(df))
print(table(complete.cases(df)))
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
# Name columns
names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
# For run 0 the green channel reads in as 'character' type.  Converting to
# numeric sends the few "Light Blocked" values to NAs.
df$green <- as.numeric(df$green)
df$blue <- as.numeric(df$blue)
df$red <- as.numeric(df$red)
df$clear <- as.numeric(df$clear)
# Replacing the bizarrely large and small values with NAs
df$green[df$green > 1000000 | df$green < 100] <- NA
df$blue[df$blue   > 1000000 | df$blue  < 100] <- NA
df$red[df$red     > 1000000 | df$red   < 100] <- NA
df$clear[df$clear > 1000000 | df$clear < 100] <- NA
print(file)
print(head(df))
print(dim(df))
print(table(complete.cases(df)))
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
start.time <- Sys.time()
for(file in files){
df <- read.csv(file.path(datapath, file), sep=',', header=F, stringsAsFactors=F)
# Name columns
names(df) <- c('green','blue','red','clear', 'p2v', 'est.Conc', 'est.Resp')
# For run 0 the green channel reads in as 'character' type.  Converting to
# numeric sends the few "Light Blocked" values to NAs.
df$green <- as.numeric(df$green)
df$blue <- as.numeric(df$blue)
df$red <- as.numeric(df$red)
df$clear <- as.numeric(df$clear)
# Replacing the bizarrely large and small values with NAs
df$green[df$green > 1000000 | df$green < 100] <- NA
df$blue[df$blue   > 1000000 | df$blue  < 100] <- NA
df$red[df$red     > 1000000 | df$red   < 100] <- NA
df$clear[df$clear > 1000000 | df$clear < 100] <- NA
# Extract experiment #, respiration rate, CO2 concentration from filename
df$run  <- substr(file,2,3)
df$resp <- substr(file,6,7)
df$conc <- substr(file,9,10)
df$time <- 1:nrow(df) # timepoint
df$runtime <- round(df$time * 1/60, 3) # clock time
# Reorder columns & factors
df <- df[c('run','conc','resp','time','runtime','p2v','est.Conc', 'est.Resp',
'green','blue','red','clear')]
df$run  <- factor(df$run,c('00','01','02','03','04','05','06','07','08','09','10',
'11','12','13','14','15','16','17','18','19','20',
'21','22','23','24','25','26','27','28','29','30',
'31','32','33','34','35','36','37','38','39','40',
'90','91','92','93','94','95'))
df$resp <- factor(df$resp,c('00','06','12','15','18','24','30'))
df$conc <- factor(df$conc,c('00','10','15','25','35','45','55','65'))
data <- rbind(data, df)
print(file)
print(dim(df))
print(table(complete.cases(df)))
}
end.time <- Sys.time()
time.taken <- end.time - start.time
print(time.taken)
test <- read.csv(file='co2.csv', header=T)
identical(data, test)
head(data)
head(test)
tail(data)
tail(test)
